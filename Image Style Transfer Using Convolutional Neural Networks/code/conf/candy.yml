## Basic configuration
style_image: img/candy.jpg # targeted style image 指定原始的风格图像
naming: "candy" # the name of this model. Determine the path to save checkpoint and events file. 模型名字，一般和图像名保持一致。这个名字决定了checkpoint和events文件的保存文件夹
model_path: models  # root path to save checkpoint and events file. The final path would be <model_path>/<naming> 文件保存的根目录。最后所有的checkpoint和events文件会被保存在<model_path>下

## Weight of the loss 各个损失的权重
content_weight: 1.0  # weight for content features loss 内容损失权重
style_weight: 50.0  # weight for style features loss 风格损失的权重
tv_weight: 0.0  # weight for total variation loss 损失的权重

## The size, the iter number to run
image_size: 256 #训练原始图片的大小
batch_size: 4  # 一次batch的样本数 优化算法 梯度下降
epoch: 2 #定型周期 向前和向后传播中所有批次的单次训练迭代

## Loss Network 损失网络
loss_model: "vgg_16" #使用vgg_16模型
content_layers:  # use these layers for content loss  使用conv3_3定义内容损失
  - "vgg_16/conv3/conv3_3"
style_layers:  # use these layers for style loss  使用conv1_2 conv2_2 使用conv3_3 conv4_3定义风格损失
  - "vgg_16/conv1/conv1_2"
  - "vgg_16/conv2/conv2_2"
  - "vgg_16/conv3/conv3_3"
  - "vgg_16/conv4/conv4_3"
checkpoint_exclude_scopes: "vgg_16/fc"  # we only use the convolution layers, so ignore fc layers. 只用到卷积层 不需要fc层(全连接层）
loss_model_file: "pretrained/vgg_16.ckpt"  # the path to the checkpoint 预训练模型对应的位置
